{"version":3,"sources":["main/ui/error-404/Error.module.css","components/input/Input.module.css","components/button/Button.module.scss","components/checkbox/Checkbox.module.css","components/TestPage.module.scss","main/bll/auth-actions.ts","main/dal/API.ts","main/bll/packs-reducer.ts","main/bll/authReducer.ts","main/bll/store.ts","features/profile/Profile.tsx","components/input/Input.tsx","components/button/Button.tsx","features/recoveryPass/RecoveryPass.tsx","main/ui/error-404/Error404.tsx","components/checkbox/Checkbox.tsx","components/TestPage.tsx","components/spinner/Spinner.tsx","features/login/Login.tsx","features/signUp/SignUp.tsx","main/ui/header/Header.tsx","features/packs/packs.tsx","main/ui/routes/Routes.tsx","main/ui/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AuthEnum","instanceLocal","axios","create","baseURL","withCredentials","authAPI","loginObj","post","then","res","data","delete","singUpObj","PackAPI","page","pageCount","get","cardsPack","id","put","PacksEnum","login","payload","type","LOGIN","loadingSpinner","value","IS_LOADING","isLoading","errorAC","error","ERROR","initialState","name","_id","avatar","isAuth","isRegister","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","token","tokenDeathTime","changeCurrentPageAC","currentPage","CHANGE_CURRENT_PAGE","deletePackAC","DELETE_PACK","setPacksTC","pageNumber","dispatch","getState","decks","SET_PACKS","catch","e","response","alert","finally","addCardsPackTC","private","newCardsPack","ADD_PACK","rootReducer","combineReducers","user","state","action","LOGOUT","UPDATE_USER","IS_AUTH","IS_REGISTER","filter","card","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Profile","useDispatch","useSelector","useEffect","to","PATH","className","src","alt","onClick","a","resp","console","log","message","Input","onChange","defaultValue","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","errorInput","currentTarget","key","Button","finalClassName","myButton","RecoveryPass","htmlFor","Error404","errorNumber","errorMessage","cat","Checkbox","onChangeChecked","children","checkbox","checked","TestPage","testPageBlock","Spinner","Login","useState","email","setEmail","password","setPassword","validEmail","setValidEmail","validPassword","setValidPassword","checkedInput","setCheckedInput","PROFILE","target","SIGNUP","rememberMe","onMouseDown","RegExp","test","length","SignUp","passwordConfirmation","setPasswordConfirmation","errorsEmail","setErrorsEmail","errorsPassword","setErrorsPassword","errorsPasswordConfirmation","setErrorsPasswordConfirmation","validateDate","onBlur","placeholder","href","Header","navBarItems","title","link","TESTPAGE","RECOVERY","PACKS","map","el","activeClassName","Packs","pagesCount","Math","ceil","pages","i","push","p","index","cardsCount","updated","deletedCardsPack","SETNEWPASSWORD","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58a343be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__26zij\",\"errorNumber\":\"Error_errorNumber__1P-7v\",\"errorMessage\":\"Error_errorMessage__3Hv2U\",\"errorCat\":\"Error_errorCat__1mfc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__2w9-n\",\"errorInput\":\"Input_errorInput__1puZx\",\"error\":\"Input_error__jdUai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myButton\":\"Button_myButton__3haxA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__3ecVR\",\"spanClassName\":\"Checkbox_spanClassName__1fWOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testPageBlock\":\"TestPage_testPageBlock__1knRz\"};","import {authAPI, AuthObjType, NewPasswordObjType} from '../dal/API'\r\nimport {ThunkType} from './store';\r\n\r\n// TYPES\r\nexport enum AuthEnum {\r\n    LOGIN = 'AUTH/LOGIN',\r\n    LOGOUT = 'AUTH/LOGOUT',\r\n    UPDATE_USER = 'AUTH/UPDATE_USER',\r\n    IS_LOADING = 'AUTH/IS_LOADING',\r\n    IS_AUTH = 'AUTH/IS_AUTH',\r\n    IS_REGISTER = \"IS_REGISTER\",\r\n    ERROR = 'AUTH/ERROR'\r\n}\r\n\r\nexport type AuthActionsTypes = ReturnType<typeof login>\r\n    | ReturnType<typeof logOut>\r\n    | ReturnType<typeof updateUser>\r\n    | ReturnType<typeof loadingSpinner>\r\n    | ReturnType<typeof authentication>\r\n    | ReturnType<typeof registerAC>\r\n    | ReturnType<typeof errorAC>\r\n\r\n// ACTION CREATORS\r\nexport const login = (payload: { name: string, _id: string, avatar?: string }) => ({\r\n    type: AuthEnum.LOGIN,\r\n    payload\r\n} as const)\r\nexport const logOut = () => ({type: AuthEnum.LOGOUT} as const)\r\nexport const updateUser = (payload: { name?: string, avatar?: string }) => ({\r\n    type: AuthEnum.UPDATE_USER,\r\n    payload\r\n} as const)\r\nexport const registerAC = ( isRegister: boolean) => ({\r\n    type: AuthEnum.IS_REGISTER,\r\n    payload: {isRegister}\r\n} as const)\r\nexport const loadingSpinner = (value: boolean) => ({type: AuthEnum.IS_LOADING, payload: {isLoading: value}} as const)\r\nexport const authentication = (value: boolean) => ({type: AuthEnum.IS_AUTH, payload: {isAuth: value}} as const)\r\nexport const errorAC = (error: string) => ({type: AuthEnum.ERROR, payload: {error}} as const)\r\n\r\n\r\n// THUNK CREATORS\r\nexport const setLogOut = (): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            let resp = await authAPI.logOut()\r\n            console.log(resp)\r\n            dispatch(logOut())\r\n        } catch (e) {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error)\r\n        }\r\n    }\r\nexport const setLogin = (data: AuthObjType): ThunkType =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch(loadingSpinner(true))\r\n            const {name, avatar, _id} = await authAPI.login(data)\r\n            dispatch(login({name, avatar, _id}))\r\n            dispatch(authentication(true))\r\n        } catch (e) {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            alert(error)\r\n        } finally {\r\n            dispatch(loadingSpinner(false))\r\n        }\r\n    }\r\nexport const registerTC = (data: AuthObjType): ThunkType =>\r\n    async dispatch => {\r\n        dispatch(loadingSpinner(true))\r\n        try {\r\n            const res = await authAPI.signUp(data)\r\n            // const {name, _id} = res.data.addedUser\r\n            dispatch(registerAC( true))\r\n            // dispatch(authentication(true))\r\n        } catch (e) {\r\n            alert(e.response.data.error)\r\n        } finally {\r\n            dispatch(loadingSpinner(false))\r\n        }\r\n    }\r\nexport const setRecovery = (email: string): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingSpinner(true))\r\n        const {info} = await authAPI.recovery(email)\r\n        alert(info)\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        alert(error)\r\n    } finally {\r\n        dispatch(loadingSpinner(false))\r\n    }\r\n}\r\nexport const setNewPassword = (data: NewPasswordObjType): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(loadingSpinner(true))\r\n        const {info} = await authAPI.setNewPassword(data)\r\n        alert(info)\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        alert(error)\r\n    } finally {\r\n        dispatch(loadingSpinner(false))\r\n    }\r\n}\r\nexport const setMeTC = (): ThunkType => (dispatch) => {\r\n    dispatch(loadingSpinner(true))\r\n    authAPI.me()\r\n        .then((res) => {\r\n            dispatch(login(res.data))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(errorAC(e.response.data.error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingSpinner(false))\r\n        })\r\n\r\n}","import axios from \"axios\"\r\n\r\nconst instanceLocal = axios.create({\r\n    //baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true\r\n})\r\n\r\nexport type AuthObjType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\ntype UpdateMeObjType = {\r\n    name: string\r\n    avatar: string\r\n}\r\nexport type NewPasswordObjType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nexport type AuthMeResponseType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n\r\n    error?: string;\r\n}\r\n\r\ntype AuthResponseType = {\r\n    info: string,\r\n    error?: string\r\n}\r\n\r\nexport type CardsPacksType = {\r\n    cardsCount: number\r\n    created: string\r\n    deckCover?: null\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: false\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cardPacks: CardsPacksType[],\r\n    cardPacksTotalCount: number,\r\n    maxCardsCount: number,\r\n    minCardsCount: number,\r\n    page: number,\r\n    pageCount: number,\r\n    token: string,\r\n    tokenDeathTime: number\r\n}\r\n\r\nexport type CardPackType = {\r\n    name: string\r\n    deckCover?: string\r\n    private: boolean\r\n}\r\n\r\ntype NewCardsPackType = {\r\n    newCardsPack: CardsPacksType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype DeleteCardsPackType = {\r\n    deletedCardsPack: DeleteCardsPackPropsType\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\ntype DeleteCardsPackPropsType = {\r\n    cardsCount: number\r\n    created: string\r\n    grade: number\r\n    more_id: string\r\n    name: string\r\n    path: string\r\n    private: boolean\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n    user_name: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type PutCardsPackType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    ping() {\r\n        return instanceLocal.get(`ping?frontTime=${Date.now()}`)\r\n    },\r\n    login(loginObj: AuthObjType) {\r\n        return instanceLocal.post<AuthMeResponseType>('auth/login', loginObj).then(res => res.data)\r\n    },\r\n    logOut() {\r\n        return instanceLocal.delete<AuthResponseType>(`auth/me`)\r\n    },\r\n    signUp(singUpObj: AuthObjType) {\r\n        return instanceLocal.post<{ error?: string, addedUser: any }>('auth/register', singUpObj)\r\n    },\r\n    me() {\r\n        return instanceLocal.post<AuthMeResponseType>('auth/me')\r\n    },\r\n    updateMe(updateMeObj: UpdateMeObjType) {\r\n        return instanceLocal.put<{ updatedUser: AuthMeResponseType, error?: string }>('auth/me', updateMeObj)\r\n    },\r\n    recovery(email: string) {\r\n        return instanceLocal.put<AuthResponseType>('auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\"\r\n\t                <a href='https://maksimushka.github.io/cards/#/set-new-password/$token$'>link</a>\r\n\t            </div>`\r\n        }).then(res => res.data)\r\n    },\r\n    setNewPassword(newPasswordObj: NewPasswordObjType) {\r\n        return instanceLocal.post<AuthResponseType>('auth/set-new-password', newPasswordObj).then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const PackAPI = {\r\n    getPacks(page: number, pageCount: number) {\r\n        return instanceLocal.get<CardsResponseType>(`/cards/pack?page=${page}&pageCount=${pageCount}`)\r\n    },\r\n    postPack(cardsPack: CardPackType) {\r\n        return instanceLocal.post<NewCardsPackType>(\"/cards/pack\", {cardsPack})\r\n    },\r\n    deletePack(id:string) {\r\n        return instanceLocal.delete<DeleteCardsPackType>(`/cards/pack?id=${id}`)\r\n    },\r\n    updatePack(cardsPack: PutCardsPackType) {\r\n        return instanceLocal.put(\"/cards/pack\", {cardsPack})\r\n    }\r\n}\r\n","import {RootStoreType} from \"./store\";\r\nimport {CardsPacksType, CardsResponseType, PackAPI, PutCardsPackType} from \"../dal/API\";\r\nimport {AuthActionsTypes, errorAC, loadingSpinner} from \"./auth-actions\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst initialState:CardsResponseType = {\r\n    cardPacks: [],\r\n    cardPacksTotalCount: 1474,\r\n    maxCardsCount: 103,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n    token: \"09aadab0-b1ae-11eb-9596-21f90af40386\",\r\n    tokenDeathTime: 1621269460955\r\n}\r\n\r\n\r\nexport const packsReducer = (state: CardsResponseType = initialState, action: ActionType): CardsResponseType => {\r\n    switch (action.type) {\r\n        case PacksEnum.SET_PACKS:\r\n            return {...state, cardPacks: action.payload}\r\n        case PacksEnum.ADD_PACK:\r\n            return {...state, cardPacks: [...state.cardPacks , action.payload]}\r\n        case PacksEnum.CHANGE_CURRENT_PAGE:\r\n            return {...state, page: action.currentPage}\r\n        case PacksEnum.DELETE_PACK:\r\n            return {...state, cardPacks: state.cardPacks.filter((card) => (card._id !== action.id))}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport enum PacksEnum {\r\n    SET_PACKS = 'PACKS/SET_PACKS',\r\n    ADD_PACK = 'PACKS/ADD_PACK',\r\n    CHANGE_CURRENT_PAGE = 'PACKS/CHANGE_CURRENT_PAGE',\r\n    DELETE_PACK = 'PACKS/DELETE_PACK'\r\n}\r\n\r\n\r\n// ACTION CREATORS\r\nexport const setPacksAC = (payload: CardsPacksType[]) => ({type: PacksEnum.SET_PACKS, payload} as const)\r\nexport const addPackAC = (payload: CardsPacksType) => ({type: PacksEnum.ADD_PACK, payload} as const)\r\nexport const changeCurrentPageAC = (currentPage: number) => ({\r\n    type: PacksEnum.CHANGE_CURRENT_PAGE,\r\n    currentPage\r\n} as const)\r\nexport const deletePackAC = (id: string) => ({type: PacksEnum.DELETE_PACK, id} as const)\r\n\r\n\r\n// THUNK CREATORS\r\nexport const setPacksTC = (pageNumber?: number) => (dispatch: ThunkDispatch<RootStoreType, unknown, ActionType | AuthActionsTypes>, getState: () => RootStoreType) => {\r\n    dispatch(loadingSpinner(true))\r\n    const {pageCount} = getState().decks\r\n    const page = getState().decks.page\r\n    PackAPI.getPacks(page, pageCount)\r\n        .then((res) => {\r\n            dispatch(setPacksAC(res.data.cardPacks))\r\n            dispatch(changeCurrentPageAC(page))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response.data.error\r\n            dispatch(errorAC(error))\r\n            alert(error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingSpinner(false))\r\n        })\r\n}\r\nexport const addCardsPackTC = () => (dispatch: ThunkDispatch<RootStoreType, unknown, ActionType | AuthActionsTypes> ) => {\r\n    dispatch(loadingSpinner(true))\r\n    PackAPI.postPack({name: \"GOGO\", private: false})\r\n        .then((res) => {\r\n            dispatch(addPackAC(res.data.newCardsPack))\r\n            dispatch(setPacksTC())\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingSpinner(false))\r\n        })\r\n}\r\n\r\nexport const deleteCardsPackTC = (id: string) => (dispatch: ThunkDispatch<RootStoreType, unknown, ActionType | AuthActionsTypes>) => {\r\n    dispatch(loadingSpinner(true))\r\n    PackAPI.deletePack(id)\r\n        .then((res) => {\r\n            dispatch(deletePackAC(res.data.deletedCardsPack._id))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response.data.error\r\n            dispatch(deletePackAC(error))\r\n            alert(error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingSpinner(false))\r\n        })\r\n}\r\nexport const updateCardsPackTC = (cardsPack: PutCardsPackType) => (dispatch:ThunkDispatch<RootStoreType, unknown, ActionType | AuthActionsTypes>) => {\r\n    dispatch(loadingSpinner(true))\r\n    PackAPI.updatePack(cardsPack)\r\n        .then((res) => {\r\n           // dispatch(setPacksAC(res.data.cardPacks))\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingSpinner(false))\r\n        })\r\n}\r\n\r\n\r\nexport type ActionType = SetPacksActionType | AddPacksActionType | ChangeCurrentPage | DeletePackActionType\r\ntype SetPacksActionType = ReturnType<typeof setPacksAC>\r\ntype AddPacksActionType = ReturnType<typeof addPackAC>\r\ntype ChangeCurrentPage = ReturnType<typeof changeCurrentPageAC>\r\ntype DeletePackActionType = ReturnType<typeof deletePackAC>\r\n","import {AuthActionsTypes, AuthEnum} from './auth-actions'\r\n\r\nconst initialState = {\r\n  name: null as string | null,\r\n  _id: null as string | null,\r\n  avatar: null as string | null,\r\n  isLoading: false,\r\n  isAuth: false,\r\n  isRegister: false,\r\n  error: null as string | null,\r\n}\r\n\r\nexport type AuthStateType = typeof initialState\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: AuthActionsTypes): AuthStateType => {\r\n  switch (action.type) {\r\n    case AuthEnum.LOGIN:\r\n      return {...state, ...action.payload}\r\n    case AuthEnum.LOGOUT:\r\n      return {...state, name: null, _id: null, avatar: null, error: \"logged out\",isAuth: false}\r\n    case AuthEnum.UPDATE_USER:\r\n      return {...state, ...action.payload}\r\n    case AuthEnum.IS_LOADING:\r\n      return {...state, ...action.payload}\r\n    case AuthEnum.IS_AUTH:\r\n      return {...state, ...action.payload, error: null}\r\n    case AuthEnum.IS_REGISTER:\r\n      return {...state, ...action.payload}\r\n    case AuthEnum.ERROR :\r\n      return {...state, ...action.payload}\r\n    default:\r\n      return state\r\n  }\r\n}","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk';\r\nimport {authReducer} from './authReducer'\r\nimport {AuthActionsTypes} from './auth-actions';\r\nimport {packsReducer} from \"./packs-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: authReducer,\r\n  decks: packsReducer\r\n})\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers((applyMiddleware(thunkMiddleware))))\r\n\r\nexport type RootStoreType =ReturnType<typeof rootReducer>\r\n// типизация санки\r\nexport type ThunkType = ThunkAction<void, RootStoreType, unknown, AuthActionsTypes>\r\n\r\n\r\n\r\n// radux-devtuls\r\n// react-developerTuls\r\n\r\n","import React, {useEffect} from 'react';\r\nimport './profile.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../main/bll/store\";\r\nimport {setLogOut, setMeTC} from \"../../main/bll/auth-actions\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../main/ui/routes/Routes\";\r\n\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector<RootStoreType, boolean>((state) => state.user.isAuth)\r\n    const error = useSelector<RootStoreType, string | null>((state) => state.user.error)\r\n    const avatar = useSelector<RootStoreType, string | null>((state) => state.user.avatar)\r\n    const name = useSelector<RootStoreType, string | null>((state) => state.user.name)\r\n\r\n    useEffect(() => {\r\n        if (!isAuth) {\r\n            dispatch(setMeTC())\r\n        }\r\n    }, [])\r\n\r\n    const isAuthLogUot = () => {\r\n        dispatch(setLogOut())\r\n    }\r\n\r\n    if (error) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='description'>\r\n                <div>\r\n                    <img src={avatar ? avatar : ''} alt=\"userPhoto\"/>\r\n                </div>\r\n                <div className='name'>{name}</div>\r\n            </div>\r\n            <button className=\"logOut\"\r\n                    onClick={isAuthLogUot}\r\n            >LogOut\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from './Input.module.css';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n  onChangeText?: (value: string) => void\r\n  onEnter?: () => void\r\n  error?: string\r\n  spanClassName?: string\r\n  defaultValue?: string\r\n};\r\n\r\nconst Input: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n      type, onChange, defaultValue,\r\n      onChangeText,\r\n      onKeyPress, onEnter,\r\n      error,\r\n      className, spanClassName,\r\n\r\n      ...restProps\r\n    }\r\n) => {\r\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n    onChange && onChange(e);\r\n\r\n    onChangeText && onChangeText(e.currentTarget.value);\r\n  }\r\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    onKeyPress && onKeyPress(e);\r\n\r\n    e.key === 'Enter' && onEnter && onEnter()\r\n  }\r\n\r\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\r\n  const finalInputClassName = `${s.superInput} ${error ? s.errorInput : s.superInput}`;\r\n\r\n  return (\r\n      <>\r\n        <input\r\n            type={type} // изменил на type был просто текст\r\n            onChange={onChangeCallback}\r\n            onKeyPress={onKeyPressCallback}\r\n            className={finalInputClassName}\r\n            defaultValue={defaultValue}\r\n\r\n            {...restProps}\r\n        />\r\n        {error && <span className={finalSpanClassName}>{error}</span>}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./Button.module.scss\";\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    error?: boolean | string\r\n}\r\n\r\nconst Button: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${error ? s.error : s.myButton} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Input from '../../components/input/Input';\r\nimport './RecoveryPass.scss'\r\nimport Button from '../../components/button/Button';\r\n\r\nconst RecoveryPass = () => {\r\n    return (\r\n        <div className='RecoveryPassBlock'>\r\n            <h2>Recovery password</h2>\r\n            <div className='RecoveryPassBlock__form'>\r\n                <label htmlFor='recov'>Enter your email:</label>\r\n                <Input id='recov'/>\r\n                <Button type='submit'>Send</Button>\r\n                <p className='RecoveryPassBlock__text'>* We will send you an email with further instructions on password recovery</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecoveryPass;","import React from \"react\";\r\nimport s from \"./Error.module.css\"\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.errorNumber}>404</div>\r\n            <div className={s.errorMessage}>Page not found!</div>\r\n            <div className={s.errorMessage}>Choose another page</div>\r\n            <div className={s.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (onChangeChecked) {\r\n            onChangeChecked(e.currentTarget.checked)\r\n        }\r\n        if (onChange) {\r\n            onChange(e)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label>\r\n    );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Button from './button/Button';\r\nimport Input from './input/Input';\r\nimport Checkbox from './checkbox/Checkbox';\r\nimport s from './TestPage.module.scss'\r\n\r\nconst TestPage = () => {\r\n    return (\r\n        <div className={s.testPageBlock}>\r\n            <h1>Test component page</h1>\r\n            <div>\r\n                <h3>Button</h3>\r\n                <Button>Click</Button>\r\n            </div>\r\n            <div>\r\n                <h3>Input</h3>\r\n                <Input />\r\n            </div>\r\n            <div>\r\n                <h3>Checkbox</h3>\r\n                <Checkbox />\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TestPage;","import React from 'react';\r\n\r\nimport './spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n      <div className=\"lds-css\">\r\n        <div className=\"lds-double-ring\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, {ChangeEvent, FC, useState} from 'react';\r\nimport './Login.scss'\r\nimport Input from '../../components/input/Input';\r\nimport Checkbox from '../../components/checkbox/Checkbox';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {PATH} from '../../main/ui/routes/Routes';\r\nimport Spinner from '../../components/spinner/Spinner';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setLogin} from '../../main/bll/auth-actions';\r\nimport {AuthStateType} from '../../main/bll/authReducer';\r\nimport {RootStoreType} from '../../main/bll/store';\r\n\r\nconst Login: FC<any> = () => {\r\n  const dispatch = useDispatch()\r\n  const {isAuth,isLoading} = useSelector<RootStoreType,AuthStateType>(state => state.user)\r\n  const [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n  const [password, setPassword] = useState<string>('1qazxcvBG')\r\n  const [validEmail, setValidEmail] = useState<boolean>(false)\r\n  const [validPassword, setValidPassword] = useState<boolean>(false)\r\n  const [checkedInput, setCheckedInput] = useState<boolean>(false)\r\n\r\n  const setRememberMe = (checked: boolean) => {\r\n    setCheckedInput(checked)\r\n  }\r\n  const changeEmail = ({target}: ChangeEvent<HTMLInputElement>) => {\r\n    setValidEmail(false)\r\n    setEmail(target.value)\r\n  }\r\n  const changePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setValidPassword(false)\r\n    setPassword(e.target.value)\r\n  }\r\n  const setIsValid = () => {\r\n    const pattern = new RegExp(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g);\r\n    if (!pattern.test(email)) {\r\n      setValidEmail(true)\r\n    }\r\n    if (password.length < 6) {\r\n      setValidPassword(true)\r\n    }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (!validEmail && !validPassword) {\r\n      // диспатчим санку с запросом\r\n      dispatch(setLogin({email: email, password: password, rememberMe: checkedInput}))\r\n    }\r\n  }\r\n  // если ты авторизован то редирект на главную страницу\r\n  if (isAuth) {\r\n    return <Redirect to={PATH.PROFILE}/>\r\n  }\r\n  return (\r\n      <section className=\"login\">\r\n        <div className=\"login__container\">\r\n          {isLoading ? (<Spinner/>)\r\n              : (<>\r\n                    <div>\r\n                      <h2>Login</h2>\r\n                      Email\r\n                      <Input type={'email'} value={email} onChange={changeEmail}/>\r\n                      Password\r\n                      <Input type={'password'} value={password} onChange={changePassword}/>\r\n                    </div>\r\n                    <Link to={PATH.SIGNUP}>Sign Up (Registration)</Link>\r\n                    <Checkbox onChangeChecked={setRememberMe}>Remember me!</Checkbox>\r\n                    <button onClick={onSubmit} onMouseDown={setIsValid}>Submit</button>\r\n                  </>\r\n              )}\r\n          {validEmail && <p className=\"error\">Enter valid email</p>}\r\n          {validPassword && <p className=\"error\">Enter longer password more then 6 symbols Now: {password.length}</p>}\r\n        </div>\r\n      </section>\r\n  )\r\n};\r\n\r\nexport default Login;\r\n","import React, {ChangeEvent, useState} from 'react';\r\nimport './SignUp.scss';\r\nimport Input from \"../../components/input/Input\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {registerTC} from \"../../main/bll/auth-actions\";\r\nimport {RootStoreType} from \"../../main/bll/store\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../main/ui/routes/Routes\";\r\n\r\n\r\nconst SignUp = () => {\r\n    const isRegister = useSelector<RootStoreType, boolean>((state) => state.user.isRegister)\r\n    const isLoading = useSelector<RootStoreType, boolean>((state) => state.user.isLoading)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState<string>(\"\")\r\n\r\n    const [errorsEmail, setErrorsEmail] = useState<string>('')\r\n    const [errorsPassword, setErrorsPassword] = useState<string>('')\r\n    const [errorsPasswordConfirmation, setErrorsPasswordConfirmation] = useState<string>('')\r\n\r\n\r\n    const onChangeHandlerEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        setErrorsEmail('')\r\n    }\r\n    const onChangeHandlerPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        setErrorsPassword('')\r\n    }\r\n    const onChangeHandlerDoublePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPasswordConfirmation(e.currentTarget.value)\r\n        setErrorsPasswordConfirmation('')\r\n    }\r\n\r\n\r\n    const validateDate = () => {\r\n        // валидация формы\r\n        if (!email) {\r\n            return setErrorsEmail(\"Поле email не может быть пустым\")\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            return setErrorsEmail('Неправельный email адресс')\r\n        }\r\n        if (!password) {\r\n            return setErrorsPassword(\"Поле пароль не может быть пустым\")\r\n        } else if (password.length < 8) {\r\n            return setErrorsPassword('Пароль не может быть менее 8 сисмволов')\r\n        }\r\n        if (passwordConfirmation !== password) {\r\n            return setErrorsPasswordConfirmation(\"Неправельный пароль\")\r\n        } else if (passwordConfirmation === password) {\r\n            return\r\n        }\r\n\r\n    }\r\n\r\n    const setIsValid = () => {\r\n        if (email && password && passwordConfirmation) {\r\n            dispatch(registerTC({email, password}))\r\n        }\r\n    }\r\n    // если зарегистрирован Redirect на Profile\r\n    if (isRegister) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading\r\n                ? <div className='wrapper'><Spinner/></div>\r\n                : <div className='wrapper'>\r\n                    <h2 className='wrapper_title'>Register</h2>\r\n                    <div className='from_text'>\r\n                        <Input className='form_text_input input'\r\n                               type=\"email\"\r\n                               onChange={onChangeHandlerEmail}\r\n                               value={email}\r\n                               onBlur={validateDate}\r\n                               placeholder='email'\r\n                        />\r\n                    </div>\r\n                    <div className='from_password'>\r\n                        <Input className='from_password_input input'\r\n                               type=\"password\"\r\n                               onChange={onChangeHandlerPassword}\r\n                               value={password}\r\n                               onBlur={validateDate}\r\n                               placeholder='password'\r\n                        />\r\n                    </div>\r\n                    <div className='from_password_double'>\r\n                        <Input className='from_password_double_input input'\r\n                               type=\"password\"\r\n                               onChange={onChangeHandlerDoublePassword}\r\n                               value={passwordConfirmation}\r\n                               onBlur={validateDate}\r\n                               placeholder='passwordConfirmation'\r\n                        />\r\n                    </div>\r\n                    <div className={errorsEmail ? 'errors' : ''}> {errorsEmail} </div>\r\n                    <div className={errorsPassword ? 'errors' : ''}> {errorsPassword} </div>\r\n                    <div className={errorsPasswordConfirmation ? 'errors' : ''}> {errorsPasswordConfirmation}</div>\r\n\r\n                    <button className='wrapper_btn_register btn'\r\n                            onClick={setIsValid}\r\n                            onMouseDown={validateDate}\r\n                    > register\r\n                    </button>\r\n                    <a href=\"http://localhost:3000/#/login\" className='wrapper_btn_signIn btn'>Sign In</a>\r\n                </div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PATH } from '../routes/Routes';\r\nimport './Header.scss'\r\n\r\nconst Header: React.FC = () => {\r\n    const navBarItems = [\r\n        {title: 'Profile', link: PATH.PROFILE},\r\n        {title: 'Login', link: PATH.LOGIN},\r\n        {title: 'SignUp', link: PATH.SIGNUP},\r\n        {title: 'TestPage', link: PATH.TESTPAGE},\r\n        {title: 'Recovery', link: PATH.RECOVERY},\r\n        {title: 'Packs', link: PATH.PACKS}\r\n    ]\r\n    return (\r\n        <div className='headerBlock'>\r\n            <div className='headerBlock__navBar'>\r\n                {\r\n                    navBarItems.map(el => {\r\n                        // добавил key, была ошибка\r\n                        return <NavLink key={el.link} activeClassName='headerBlock__navBar-active' className='headerBlock__navBar-item' to={el.link}>{el.title}</NavLink>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, {useEffect} from \"react\";\r\nimport './packs.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../../main/bll/store\";\r\nimport {\r\n    addCardsPackTC,\r\n    changeCurrentPageAC,\r\n    deleteCardsPackTC,\r\n    setPacksTC,\r\n    updateCardsPackTC\r\n} from \"../../main/bll/packs-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../main/ui/routes/Routes\";\r\nimport {CardsPacksType, CardsResponseType} from \"../../main/dal/API\";\r\nimport Spinner from \"../../components/spinner/Spinner\";\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch()\r\n    // const {} = useSelector<RootStoreType,CardsResponseType>((state) => state.decks)\r\n    const isAuth = useSelector<RootStoreType, boolean>((state) => state.user.isAuth)\r\n    const cardPacks = useSelector<RootStoreType, CardsPacksType[]>((state) => state.decks.cardPacks)\r\n    const page = useSelector<RootStoreType, number>((state) => state.decks.page)\r\n    const pageCount = useSelector<RootStoreType, number>((state) => state.decks.pageCount)\r\n    const cardPacksTotalCount = useSelector<RootStoreType, number>((state) => state.decks.cardPacksTotalCount)\r\n    const isLoading = useSelector<RootStoreType, boolean>((state) => state.user.isLoading)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setPacksTC(page))\r\n    }, [page])\r\n\r\n    const addPack = () => {\r\n        dispatch(addCardsPackTC())\r\n    }\r\n\r\n    const pagesCount = Math.ceil(cardPacksTotalCount / pageCount)\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading\r\n                ? <div className='wrapper'><Spinner/></div>\r\n                : <div className='wrapper_packs'>\r\n                    {pages.map((p, index) => <span key={index}\r\n                                                   className={page === p ? \"page\" : ''}\r\n                                                   onClick={() => {\r\n                                                       dispatch(changeCurrentPageAC(p))\r\n                                                   }}\r\n                    >{p + ' '}</span>)}\r\n                    <h4>Packs page</h4>\r\n                    <input type=\"checkbox\"/>\r\n                    <span>my packs</span>\r\n                    <h4>Card packs</h4>\r\n                    <table id=\"simple-board\">\r\n                        <tbody>\r\n                        <tr id=\"row0\">\r\n                            <td id=\"cell0-0\">name</td>\r\n                            <td id=\"cell0-1\">cards count</td>\r\n                            <td id=\"cell0-2\">updated</td>\r\n                            <td id=\"cell0-2\">url</td>\r\n                            <td id=\"cell0-2\">\r\n                                <button onClick={() => {\r\n                                    addPack()\r\n                                }}>add\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                        {\r\n                            cardPacks.map((card) => <tr key={card._id} >\r\n                                <td >{card.name}</td>\r\n                                <td >{card.cardsCount}</td>\r\n                                <td >{card.updated}</td>\r\n                                <td ></td>\r\n                                <td >\r\n                                    <button onClick={() => {\r\n                                        dispatch(deleteCardsPackTC(card._id))\r\n                                    }}>delete\r\n                                    </button>\r\n                                    <button onClick={() => {\r\n                                        dispatch(updateCardsPackTC({_id: card._id, name: \"Vasya\"}))\r\n                                    }}>update\r\n                                    </button>\r\n                                    <a href={''}>cards</a>\r\n                                </td>\r\n                            </tr>)\r\n                        }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Profile from '../../../features/profile/Profile';\r\nimport RecoveryPass from '../../../features/recoveryPass/RecoveryPass';\r\nimport Error404 from '../error-404/Error404';\r\nimport TestPage from '../../../components/TestPage';\r\nimport Login from '../../../features/login/Login';\r\nimport SignUp from \"../../../features/signUp/SignUp\";\r\nimport Header from '../header/Header';\r\nimport {Packs} from \"../../../features/packs/packs\";\r\n\r\n\r\nexport const PATH = {\r\n    PROFILE: \"/profile\",\r\n    LOGIN: '/login',\r\n    RECOVERY: '/recovery',\r\n    SIGNUP: \"/signUp\",\r\n    TESTPAGE: '/testPage',\r\n    SETNEWPASSWORD: '/SetNewPassword',\r\n    PACKS: '/packs'\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n\r\n                <Route path={PATH.PROFILE} render={() => <Profile />}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login />}/>\r\n                <Route path={PATH.SIGNUP} render={() => <SignUp />}/>\r\n                <Route path={PATH.RECOVERY} render={() => <RecoveryPass />}/>\r\n                <Route path={PATH.TESTPAGE} render={() => <TestPage />}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs />}/>\r\n\r\n                <Route render={() => <Error404 />}/>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport Routes from './routes/Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <HashRouter>\r\n        <Routes/>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport { store } from './main/bll/store';\r\nimport App from './main/ui/App'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}